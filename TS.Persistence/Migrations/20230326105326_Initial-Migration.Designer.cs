// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TS.Persistence.DB;

#nullable disable

namespace TS.Persistence.Migrations
{
    [DbContext(typeof(TSDBContext))]
    [Migration("20230326105326_Initial-Migration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TS.Models.Models.Port", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("Latitude")
                        .HasColumnType("int");

                    b.Property<int>("Longitude")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Ports");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Latitude = 90,
                            Longitude = 100,
                            Name = "Port 1"
                        },
                        new
                        {
                            ID = 2,
                            Latitude = 120,
                            Longitude = 130,
                            Name = "Port 2"
                        },
                        new
                        {
                            ID = 3,
                            Latitude = 70,
                            Longitude = 150,
                            Name = "Port 3"
                        });
                });

            modelBuilder.Entity("TS.Models.Models.Ship", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("Latitude")
                        .HasColumnType("int");

                    b.Property<int>("Longitude")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Velocity")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.ToTable("Ships");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Latitude = 20,
                            Longitude = 30,
                            Name = "Ship 1",
                            Velocity = 0m
                        },
                        new
                        {
                            ID = 2,
                            Latitude = 40,
                            Longitude = 25,
                            Name = "Ship 2",
                            Velocity = 0m
                        },
                        new
                        {
                            ID = 3,
                            Latitude = 26,
                            Longitude = 57,
                            Name = "Ship 3",
                            Velocity = 0m
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
